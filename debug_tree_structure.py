#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —É–∑–ª–æ–≤ –¥–µ—Ä–µ–≤–∞ —Ä–µ—à–µ–Ω–∏–π.
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append('/app')

try:
    from ai_agent.utils.decision_tree import DecisionTreeBuilder, QueryType
    
    print("üîç –û—Ç–ª–∞–¥–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —É–∑–ª–æ–≤ –¥–µ—Ä–µ–≤–∞ —Ä–µ—à–µ–Ω–∏–π")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º builder
    builder = DecisionTreeBuilder()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –¥–µ—Ä–µ–≤–æ
    tree = builder.build_general_query_tree('–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å', True)
    
    print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ—Ä–µ–≤–µ:")
    print(f"   ID –¥–µ—Ä–µ–≤–∞: {tree.id}")
    print(f"   –¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞: {tree.query_type}")
    
    print(f"\nüå≥ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—Ä–Ω–µ–≤–æ–º —É–∑–ª–µ:")
    root = tree.root
    print(f"   ID: {root.id}")
    print(f"   –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞: {type(root)}")
    print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã: {dir(root)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª–µ–π
    possible_labels = ['label', 'name', 'title', 'text', 'description']
    
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è —É–∑–ª–∞:")
    for field in possible_labels:
        if hasattr(root, field):
            value = getattr(root, field)
            print(f"   ‚úÖ {field}: '{value}'")
        else:
            print(f"   ‚ùå {field}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ —É–∑–ª—ã
    if root.children:
        print(f"\nüë∂ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–≤–æ–º –¥–æ—á–µ—Ä–Ω–µ–º —É–∑–ª–µ:")
        child = root.children[0]
        print(f"   ID: {child.id}")
        print(f"   –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞: {type(child)}")
        
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π –¥–æ—á–µ—Ä–Ω–µ–≥–æ —É–∑–ª–∞:")
        for field in possible_labels:
            if hasattr(child, field):
                value = getattr(child, field)
                print(f"   ‚úÖ {field}: '{value}'")
            else:
                print(f"   ‚ùå {field}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    else:
        print(f"\nüë∂ –î–æ—á–µ—Ä–Ω–∏–µ —É–∑–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    
    print(f"\n" + "=" * 50)
    print("‚ú® –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ai-agent")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()